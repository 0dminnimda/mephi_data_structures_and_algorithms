/*
Write program in C:

Library for vector-based table

Library implementations:

In-memory

Vector-based table:

`table.h`:
```c
typedef unsigned int KeyType;
typedef unsigned int InfoType;
typedef size_t IndexType;

struct Item {
    InfoType *info; // actual data
    KeyType key; // backreference to KeySpace
};

struct KeySpace {
    KeyType key;
    KeyType par; // nullable
    Item *info;
};

struct Table {
    KeySpace *ks;
    IndexType msize; // max key space size
};
```

No dup keys/must have parent key or null.
Ordered by parent key. Parent key may duplicate.

Operations:

- Insert element with unique key
- Delete element by key
- Search by key (returns an iterator of matches)
- Output to standard stream
- Import from text file
- Remove by key if no parent keys in table = key
- Search by parent key value, return new table of matches

Requirements:

- No globals
- If input incorrect, show error, then continue
- If error in table op, show it, then continue
- Correct memory usage
*/
